# TODO CLI

store
app-1.tm
store-1.tm
filedata-1.tm
misc-1.tm
globals-1.tm

test_store.tcl

sql/prepare.sql
sql/create.sql

README.md

st.sh

#
# CLI API
#   default action is update (i.e., create new generation) with no message
#	if no existing dirname1.str givens an error message saying to
#	use add; otherwise creates new generation with 'R' or 'r' or '='
#	for every file present in the _last_ generation that hasn't been
#	deleted
#   -m|--message|message <any text> # update with message
#
#   -h|--help|help # usage
#   --version|version
# 
#   -v|--verbose|verbose # give more info on action
#
#   -g|--gui|gui # launch GUI
#   -a|--add|add [filename1|dirname1 [... filename|dirnameN]]
#	creates dirname.str if it doesn't exist
#	creates a new generation adding all files in the current dir and
#	all given filenames and all files in the given dirs (if any
#	given), but excluding hidden files and excluded files:
#	Excludes are managed by the application itself not by the Store
#	database. When adding new files the application must exclude any
#	files/globs listed in .gitignore or .hginore files as well as
#	hidden files and sensible default ignores.
#   -d|--diff|diff <last|gid1> [last|gid2] <filename> 
#	# diff the last or given gid1 of filename against one in current
#	# dir or against last or gid2 if given
#   -e|--extract|extract <last|gid> [filename1 [filename2 [... filenameN]]]>
#	# extract all files at last or given gid into the current dir or
#	# the specified files using naming
#	# path/filename1.ext â†’ path/filename1#gid.ext etc
#   -r|--restore|restore <last|gid> <folder>
#	# restore all files at last or given gid into the given folder
#   -f|--filenames|filenames <last|gid>
#	# print the latest or given generation's filenames to stdout
#   -l|--list|list [last|gid]
#	# lists all generations (gid x created x message)
#   -P|--purge|purge <filename>
#	# delete the given filename in every generation

# vim: syn=yaml
