# TODO CLI

store
app-1.tm
store-1.tm
filedata-1.tm
misc-1.tm

test_store.tcl

sql/prepare.sql
sql/create.sql

README.md

st.sh

# CLI API
#   store <subcommand> ...
#
#   a|add [-v|--verbose] [filename1|dirname1 [... filename|dirnameN]]
#	creates a new store called .dirname.str if it doesn't exist and
#	creates a new generation adding all specified files and all files in
#	the specified directories, but excluding those matching the
#	names/globs listed in .gitignore or .hginore files as well as hidden
#	files and sensible default ignores. If verbose any files or folders
#	_not_ being added and _not_ excluded shoule be listed as 'not added'
#	with 'add to .gitignore to avoid this reminder'
#   u|update [-v|--verbose] [any message text]
#	if no store exists (i.e., .dirname.str) reports and error and exits;
#	otherwise creates a new generation updating files from the _last_
#	generation. If verbose any files or folders _not_ being updated and
#	_not_ excluded shoule be listed as 'not added' with 'add to
#	.gitignore to avoid this reminder'
#   e|extract [-v|--verbose] <last|gid> [filename1 [filename2 [... filenameN]]]>
#	extract all files at last or given gid into the current dir or the
#	specified files using naming path/filename1.ext â†’
#	path/filename1#gid.ext etc
#   c|copy [-v|--verbose] <last|gid> <folder>
#	copy all files at last or given gid into the given (non-existing)
#	folder
#   d|diff <last|gid1> [last|gid2] <filename> 
#	diff the last or given gid1 of filename against one in current dir
#	or against last or gid2 if given
#   f|filenames <last|gid>
#	print the latest or given generation's filenames to stdout
#   g|generations|generations
#	lists all generations (gid x created x message)
#   p||purge <filename>
#	delete the given filename in every generation
#   g|gui
#	launch GUI
#   h|help|-h|--help
#	usage
#   v|version|-v|--version

# vim: syn=yaml
