# TODO
# - Database
#   . put in upgradeto2.sql:
#	. CREATE TABLE Tags (
#   	    gid INTEGER PRIMARY KEY NOT NULL,
#   	    tag TEXT NOT NULL,
#   	    FOREIGN KEY(gid) REFERENCES Generations(gid)
#   	  );
#   	. INSERT INTO Tags SELECT gid, message AS tag FROM Generations
#	    WHERE message IS NOT NULL AND LENGTH(message) > 0;
#   	. ALTER TABLE Generations DROP COLUMN message;
#   	. PRAGMA USER_VERSION 2;
#   . Add to Store clean method (after deleting files):
#      DELETE FROM Tags WHERE gid NOT IN (SELECT gid FROM Files);
#   . change the Store constructor to read PRAGMA USER_VERSION & iff 1
#       execute upgradeto2.sql (which contains all the above)
#   . change Store VERSION to 1.2.0
#
# - str:
#   . make sure history & generations print tags instead of (defunct)
#	messages
#   . change cli::usage to cli::usage {{full false}}
#   . -H | --help-full → usage true (prints as now)
#   . -h | --help → usage (i.e., false; prints shortened usage)
#   . t | tag [@gid] tag-text (replaces if exists; otherwise adds)
#   . deltag <@gid>
#
# - store
#   . Whenever a new file is chosen in the tree invoke Show As-Is
#   . Add &More button with:
#     &Tags… *new* | &Ignores… | [sep] | &Clean | &Purge… | [sep] | &About
#   . Delete Ignores, Clean, Purge, & About buttons
#   . Implement Tags add/edit/remove dialog v. similar to Ignores dialog
#   . Use https://core.tcl-lang.org/tklib/doc/trunk/embedded/md/tklib/files/modules/history/tklib_history.md
#   for Find text entry
#
# NOTE use textutil::{chop,tail} where appropriate:
#	look for "string index" & "string trim"

str

cli-1.tm
cli_actions-1.tm
cli_misc-1.tm
cli_globals-1.tm

gui-1.tm
gui_app-1.tm
gui_app_make-1.tm
gui_app_actions-1.tm
gui_actions-1.tm
gui_ignores-1.tm
gui_about-1.tm
gui_misc-1.tm
gui_globals-1.tm

form-1.tm
yes_no_box-1.tm

store-1.tm # VERSION
filedata-1.tm
diff-1.tm
misc-1.tm

test_store.tcl

sql/prepare.sql
sql/create.sql
sql/insert.sql

# TODO add installation instructions once I can built a stand-alone binary
README.md

st.sh

# NOTE Could add to find frame:
#   [ ] Case Sensitive
#   [ ] Whole Words

# vim: syn=yaml
